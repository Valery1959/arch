#!/bin/bash
# install hyprland

script_dir=$(cd $(dirname $0); pwd -P); source $script_dir/utils.sh; utils_init; log_init $script_dir

uninstall_packages="pulseaudio-u pulseaudio-qt-u aylurs-gtk-shell dunst cachyos-hyprland-settings mako"
uninstall_packages="$uninstall_packages rofi wallust-git rofi-lbonn-wayland rofi-lbonn-wayland-git"

source $script_dir/hyperland_args
for arg in $@
do
  case $arg in
    nvidia) nvidia="Y"           ;;
    "")                          ;;
    *) err "Unknown argument $1" ;;
  esac
done

check_root # this script should be run as root user
check_sudo # enter password to run with sudo priviliges
check_sddm # check that non-SDDM login manager are inactive

notwant_packages "$uninstall_packages" # these packages should be removed manually
upgrade_packages                       # upgrade and update all packages
install_packages "archlinux-keyring"   # essential
install_packages "base-devel"          # essential
install_packages "git"                 # to install package helpers, i.e. yay
install_phelpers                       # package helpers, for example yay for ArchLinux
install_packages "pciutils"            # to detect GPU
grep_pci_devices "nvidia" || nvidia=N  # detect GPU, and if it is not nvidia, then do not install NVIDIA drivers
grep_linux_group "input"  && inputg=N  # check user already is in input group

# echo "nvidia=$nvidia"
# echo "inputg=$inputg"
# echo "sddm=$sddm"
# echo "sddm_theme=$sddm_theme"
# echo "gtk_themes=$gtk_themes"
# echo "bluetooth=$bluetooth"
# echo "thunar=$thunar"
# echo "ags=$ags"
# echo "xdph=$xdph"
# echo "pokemon=$pokemon"
# echo "rog=$rog"
# echo "dots=$dots"

# hyprland packages required
hyprland_packages="$hyprland_packages findutils bc cliphist curl grim gvfs gvfs-mtp hyprpolkitagent imagemagick inxi jq kitty kvantum"
hyprland_packages="$hyprland_packages libspng network-manager-applet pamixer pavucontrol playerctl"
hyprland_packages="$hyprland_packages python-requests python-pyquery qt5ct qt6ct qt6-svg rofi-wayland"
hyprland_packages="$hyprland_packages slurp swappy swaync swww unzip waybar wget wl-clipboard"
hyprland_packages="$hyprland_packages xdg-user-dirs xdg-utils yad"
hyprland_packages="$hyprland_packages brightnessctl btop cava loupe fastfetch gnome-system-monitor"
hyprland_packages="$hyprland_packages mousepad mpv mpv-mpris nvtop nwg-look nwg-displays"
hyprland_packages="$hyprland_packages pacman-contrib qalculate-gtk yt-dlp"

# hyprland packages required, only in AUR repository
# wlogout (logout menu for wayland)
# wallust (generate colors from an image)
arch_usr_packages="wlogout wallust"
hyprland_aurpacks="wlogout wallust"

# pipeware packages and services required
pipewire_packages="pipewire wireplumber pipewire-audio pipewire-alsa pipewire-pulse sof-firmware"
pipewire_services="pipewire.socket pipewire-pulse.socket wireplumber.service pipewire.service"

# hyprland fonts required
hyprland_ttffonts="$hyprland_ttffonts adobe-source-code-pro-fonts noto-fonts-emoji otf-font-awesome ttf-droid ttf-fira-code"
hyprland_ttffonts="$hyprland_ttffonts ttf-fantasque-nerd ttf-jetbrains-mono ttf-jetbrains-mono-nerd noto-fonts"

# hyprland fonts required, only in AUR repository
hyprland_aurfonts="ttf-victor-mono"

# hyprland main packages 
hyprland_mainpack="hypridle hyprlock hyprland"

install_packages "$hyprland_packages" "hyprland packages"
install_packages "$hyprland_aurpacks" "hyprland AUR pack"  yay
install_packages "$pipewire_packages" "pipewire packages"
activate_service "$pipewire_services" "pipewire services"
install_packages "$hyprland_ttffonts" "hyprland ttf fonts"
install_packages "$hyprland_aurfonts" "hyprland AUR fonts" yay
install_packages "$hyprland_mainpack" "hypridle/lock/land"

exit 0

echo "Update package database"

run sudo pacman -Syu

packages="git"

run sudo pacman -S --noconfirm --needed $packages

run git clone --depth=1 https://github.com/JaKooLit/Arch-Hyprland.git ~/Arch-Hyprland

cd ~/Arch-Hyprland

run chmod +x install.sh

echo "edit preset.sh and run the following command"

echo "./install.sh --preset --nvidia"

exit 0

check_install()
{
   for app in "$@"
   do
      installed "$app" || { echo "Missing $app, please install dev packages"; exit 1; }
   done
}

check_install yay git kitty alacritty

#echo "Update package database"
#run sudo pacman -Syu

# Additional hyprland essential packages (dev packages have to be already installed)
# hyprland (tiling window manager)
# kitty (default terminal for tiling window manager, should be already installed in dev)
# alacritty (additional terminal, should be already installed in dev)
# hyprpaper (Wallpaper utility for Hyprland)
# hyprlock (screen lock for Hyprland)
# hypridle (hyprlandâ€™s idle daemon)
# waybar (Wayland bar for Sway and Wlroots based compositors)
# wofi (GTK-based customizable launcher for Wayland)
# rofi-wayland (A window switcher, fork with wayland support)
# starship (The cross-shell prompt for astronauts), use powerlevel10k in zsh instead
# swaync (GTK based notification daemon for Sway)
# brightnessctl (Lightweight brightness control tool)
# stow (GNU Stow - Manage installation of multiple softwares in the same directory tree)
# ttf-font-awesome (Iconic font designed for Bootstrap)
# ttf-cascadia-code-nerd (Patched font Cascadia Code (Caskaydia) from nerd fonts library)
# papirus-icon-theme (Papirus icon theme for rofi application launcher)

packages="hyprland"
packages="$packages hyprpaper hyprlock hypridle waybar rofi-wayland wofi"
#packages="$packages starship swaync brightnessctl stow"
packages="$packages swaync brightnessctl stow"
#packages="$packages ttf-font-awesome ttf-cascadia-code-nerd papirus-icon-theme"
packages="$packages ttf-font-awesome ttf-cascadia-code-nerd"

run sudo pacman -S --noconfirm --needed $packages

# AUR hyprland essential packages
hyprland_packages="papirus-icon-theme"
run yay -S --noconfirm --needed $hyprland_packages

cur_date=$(date '+%Y.%m.%d_%H.%M.%S')

if [ -d $HOME/dotfiles ] ; then # Backup existing dotfiles
  [ ! -d $HOME/backups ] && run mkdir $HOME/backups
  run mv $HOME/dotfiles $HOME/backups/dotfiles_$cur_date
fi

run cp -r $script_dir/extra/config/dotfiles $HOME

# stow configuration packages
stow_packages="backgrounds hyprlock hyprmocha hyprpaper kitty rofi starship waybar wofi"

for p in $stow_packages
do
  n=$HOME/.config/$p

  if [ -h $n ] ; then
    run rm $n
  elif [ -d $n ] ; then
    run mv $p $HOME/backups/$p_$cur_date
  fi
done

echo "enable hyprland configuration"
( 
  cd ~/dotfiles
  run stow $stow_packages
)

echo "copy hypridle.conf, hyprland.conf - as cannot stow them"
run rsync -lvrpt  $script_dir/extra/config/dotfiles/hypr ~/.config 

# eval "$(starship init bash)"

exit 0
